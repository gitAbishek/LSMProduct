name: Run PHP Unit tests on PR
# on:
#   pull_request:
#     branches:
#       - 'develop'

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  unit-php:
    name: PHP ${{ matrix.php }} WP ${{ matrix.wp }}
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'wpeverest/learning-management-system' || github.event_name == 'pull_request' }}
    continue-on-error: ${{ matrix.wp == 'dev-nightly' }}
    strategy:
      fail-fast: false
      matrix:
        php: ['7.2', '7.3', '7.4']
        wp: ['latest']
        include:
          - wp: 'dev-nightly'
            php: 7.4
          - wp: '5.7'
            php: 7.2
          - wp: '5.6'
            php: 7.2
          - wp: '5.0'
            php: 7.2
    services:
      database:
        image: mysql:5.6
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install javascript dependencies
        run: yarn install

      - name: Compile typescript
        run: |
          yarn build
          yarn build:blocks

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          extensions: mysqli
          coverage: none

      - name: Tool versions
        run: |
          php --version
          composer --version

      - name: Get cached composer directories
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup and install composer
        run: |
          composer update
          composer require --dev --prefer-dist roots/wordpress="${{ matrix.wp == 'latest' && '*' || matrix.wp }} || *" wp-phpunit/wp-phpunit="${{ matrix.wp == 'latest' && '*' || matrix.wp }} || *"

      - name: Run unit tests
        run: composer test
        env:
          MYSQL_DATABASE: wordpress
          WP_TESTS_DB_PASS: root
          WP_TESTS_DB_HOST: '127.0.0.1'
